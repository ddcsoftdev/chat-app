version: '3.8'

services:
  postgres:
    container_name: chat-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: chat-db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d chat-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: chat-backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chat-db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_WEB_CORS_ALLOWED-ORIGINS: http://localhost:4000
      SPRING_WEB_CORS_ALLOWED-METHODS: GET,POST,PUT,DELETE,OPTIONS
      SPRING_WEB_CORS_ALLOWED-HEADERS: "*"
      SPRING_WEB_CORS_ALLOW-CREDENTIALS: "true"
      SPRING_WEB_CORS_MAX-AGE: 3600
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: chat-frontend
    build:
      context: ./frontend/chat-app-frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - BACKEND_URL=http://localhost:8080
    depends_on:
      - backend

volumes:
  postgres_data: 